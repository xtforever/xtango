/* xtangoimage */

TANGO_IMAGE image_copy(TANGO_IMAGE image);
void line_create(TANGO_IMAGE image, WIN_COORD lx, WIN_COORD ly, int vis, int color, WIN_COORD sx, WIN_COORD sy, double width, double style, int arrow);
void line_draw(TANGO_IMAGE super_im, TANGO_IMAGE image, WIN_COORD dx, WIN_COORD dy);
void line_trans(TANGO_IMAGE image, TANGO_TRANS_TYPE trans_type, WIN_COORD dx, WIN_COORD dy);
TANGO_LOC line_loc(TANGO_IMAGE image, TANGO_PART_TYPE part);
void line_bb(TANGO_IMAGE image, WIN_COORD *lx, WIN_COORD *by, WIN_COORD *rx, WIN_COORD *ty);
void rectangle_create(TANGO_IMAGE image, WIN_COORD lx, WIN_COORD ly, int vis, int color, WIN_COORD sx, WIN_COORD sy, double fill);
void rectangle_draw(TANGO_IMAGE super_im, TANGO_IMAGE image, WIN_COORD dx, WIN_COORD dy);
void rectangle_trans(TANGO_IMAGE image, TANGO_TRANS_TYPE trans_type, WIN_COORD dx, WIN_COORD dy);
TANGO_LOC rectangle_loc(TANGO_IMAGE image, TANGO_PART_TYPE part);
void rectangle_bb(TANGO_IMAGE image, WIN_COORD *lx, WIN_COORD *by, WIN_COORD *rx, WIN_COORD *ty);
void circle_create(TANGO_IMAGE image, WIN_COORD lx, WIN_COORD ly, int vis, int color, WIN_COORD radius, double fill);
void circle_draw(TANGO_IMAGE super_im, TANGO_IMAGE image, WIN_COORD dx, WIN_COORD dy);
void circle_trans(TANGO_IMAGE image, TANGO_TRANS_TYPE trans_type, WIN_COORD dx, WIN_COORD dy);
TANGO_LOC circle_loc(TANGO_IMAGE image, TANGO_PART_TYPE part);
void circle_bb(TANGO_IMAGE image, WIN_COORD *lx, WIN_COORD *by, WIN_COORD *rx, WIN_COORD *ty);
void ellipse_create(TANGO_IMAGE image, WIN_COORD lx, WIN_COORD ly, int vis, int color, WIN_COORD rx, WIN_COORD ry, double fill);
void ellipse_draw(TANGO_IMAGE super_im, TANGO_IMAGE image, WIN_COORD dx, WIN_COORD dy);
void ellipse_trans(TANGO_IMAGE image, TANGO_TRANS_TYPE trans_type, WIN_COORD dx, WIN_COORD dy);
TANGO_LOC ellipse_loc(TANGO_IMAGE image, TANGO_PART_TYPE part);
void ellipse_bb(TANGO_IMAGE image, WIN_COORD *lx, WIN_COORD *by, WIN_COORD *rx, WIN_COORD *ty);
void polyline_create(TANGO_IMAGE image, WIN_COORD lx, WIN_COORD ly, int vis, int color, int vertices, double vertexX[], double vertexY[], double width, double style, int arrow);
void polyline_draw(TANGO_IMAGE super_im, TANGO_IMAGE image, WIN_COORD dx, WIN_COORD dy);
void polyline_trans(TANGO_IMAGE image, TANGO_TRANS_TYPE trans_type, WIN_COORD dx, WIN_COORD dy);
TANGO_LOC polyline_loc(TANGO_IMAGE image, TANGO_PART_TYPE part);
void polyline_bb(TANGO_IMAGE image, WIN_COORD *lx, WIN_COORD *by, WIN_COORD *rx, WIN_COORD *ty);
void polygon_create(TANGO_IMAGE image, WIN_COORD lx, WIN_COORD ly, int vis, int color, int sides, double vertexX[], double vertexY[], double fill);
void polygon_draw(TANGO_IMAGE super_im, TANGO_IMAGE image, WIN_COORD dx, WIN_COORD dy);
void polygon_trans(TANGO_IMAGE image, TANGO_TRANS_TYPE trans_type, WIN_COORD dx, WIN_COORD dy);
TANGO_LOC polygon_loc(TANGO_IMAGE image, TANGO_PART_TYPE part);
void polygon_bb(TANGO_IMAGE image, WIN_COORD *lx, WIN_COORD *by, WIN_COORD *rx, WIN_COORD *ty);
void spline_create(TANGO_IMAGE image, WIN_COORD lx, WIN_COORD ly, int vis, int color, int vertices, double vertexX[], double vertexY[], double width, double style);
void spline_draw(TANGO_IMAGE super_im, TANGO_IMAGE image, WIN_COORD dx, WIN_COORD dy);
void spline_trans(TANGO_IMAGE image, TANGO_TRANS_TYPE trans_type, WIN_COORD dx, WIN_COORD dy);
TANGO_LOC spline_loc(TANGO_IMAGE image, TANGO_PART_TYPE part);
void spline_bb(TANGO_IMAGE image, WIN_COORD *lx, WIN_COORD *by, WIN_COORD *rx, WIN_COORD *ty);

void text_create(TANGO_IMAGE image, WIN_COORD lx, WIN_COORD ly, int vis, int color, char *fontname, char *string, int orient);
void text_draw(TANGO_IMAGE super_im, TANGO_IMAGE image, WIN_COORD dx, WIN_COORD dy);
void text_trans(TANGO_IMAGE image, TANGO_TRANS_TYPE trans_type, WIN_COORD dx, WIN_COORD dy);
TANGO_LOC text_loc(TANGO_IMAGE image, TANGO_PART_TYPE part);
void text_bb(TANGO_IMAGE image, WIN_COORD *lx, WIN_COORD *by, WIN_COORD *rx, WIN_COORD *ty);
void bmap_create(TANGO_IMAGE image, WIN_COORD lx, WIN_COORD ly, int vis, int *bmaps, int n, int width, int height);
void bmap_copy(TANGO_IMAGE destImage, TANGO_IMAGE srcImage);
void bmap_draw(TANGO_IMAGE super_im, TANGO_IMAGE image, WIN_COORD dx, WIN_COORD dy);
void bmap_trans(TANGO_IMAGE image, TANGO_TRANS_TYPE trans_type, WIN_COORD dx, WIN_COORD dy);
TANGO_LOC bmap_loc(TANGO_IMAGE image, TANGO_PART_TYPE part);
void bmap_bb(TANGO_IMAGE image, WIN_COORD *lx, WIN_COORD *by, WIN_COORD *rx, WIN_COORD *ty);
void composite_create(TANGO_IMAGE image, WIN_COORD lx, WIN_COORD ly, int vis, TANGO_IMAGE_COMPONENT subimages[]);
void composite_draw(TANGO_IMAGE super_im, TANGO_IMAGE image, WIN_COORD dx, WIN_COORD dy);
void composite_trans(TANGO_IMAGE image, TANGO_TRANS_TYPE trans_type, WIN_COORD dx, WIN_COORD dy);
TANGO_LOC composite_loc(TANGO_IMAGE image, TANGO_PART_TYPE part);
void composite_bb(TANGO_IMAGE image, WIN_COORD *lx, WIN_COORD *by, WIN_COORD *rx, WIN_COORD *ty);
TANGO_IMAGE read_composite(TANGO_IMAGE_COMPONENT images[]);
void copy_composite(TANGO_IMAGE sourceim, TANGO_IMAGE destim);
void compute_arrow_off(double dx, double dy, double *adx1, double *ady1, double *adx2, double *ady2);
void arrow_poly_direction(int num, WIN_COORD vert[7][2], WIN_COORD *fx, WIN_COORD *fy, WIN_COORD *bx, WIN_COORD *by);
int decode_trans(TANGO_TRANS_TYPE t);
int inquire_pathcolor(WIN_COORD dx, WIN_COORD dy);
int get_color(char *str);
int get_fillstyle(double val);
TANGO_LINE_STYLE get_linestyle(double width, double style);
void TANGO_bounding_box(TANGO_IMAGE im, WIN_COORD *lx, WIN_COORD *by, WIN_COORD *rx, WIN_COORD *ty);
void TANGO_damage_clear_screen(void);
void TANGO_clear_screen(void);

/* */
void TANGOset_bgcolor(char *name);
void TANGO_setup_windows(void);
void TANGO_flush(void);
void TANGO_batch_mode(int fg);
void animate_begin(void);
